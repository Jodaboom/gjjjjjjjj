import os
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils import executor
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup

API_TOKEN = os.getenv('API_TOKEN', '7793704184:AAEEJEqZBZQaTd559ESOAWpLIYjAT2NWlcM')
ADMIN_ID = int(os.getenv('ADMIN_ID', '1108742069'))
DONATIONALERTS_LINK = 'https://www.donationalerts.com/r/palachi'

bot = Bot(token=API_TOKEN)
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)

class Form(StatesGroup):
    server = State()
    nickname = State()
    amount = State()

@dp.message_handler(commands=['start'])
async def cmd_start(message: types.Message):
    kb = ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add(KeyboardButton('üõí –ö—É–ø–∏—Ç—å –≤–∞–ª—é—Ç—É'))
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–∞–ª—é—Ç—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞—Ö Minecraft. –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å:", reply_markup=kb)

@dp.message_handler(lambda msg: msg.text == 'üõí –ö—É–ø–∏—Ç—å –≤–∞–ª—é—Ç—É')
async def choose_server(message: types.Message):
    kb = ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add(KeyboardButton('–§–∞–Ω—Ç–∞–µ–º'), KeyboardButton('–î—Ä—É–≥–æ–π —Å–µ—Ä–≤–µ—Ä'))
    await Form.server.set()
    await message.answer("–í—ã–±–µ—Ä–∏ —Å–µ—Ä–≤–µ—Ä:", reply_markup=kb)

@dp.message_handler(state=Form.server)
async def ask_nickname(message: types.Message, state: FSMContext):
    await state.update_data(server=message.text)
    await Form.next()
    await message.answer("–í–≤–µ–¥–∏ —Å–≤–æ–π –Ω–∏–∫ –≤ Minecraft:")

@dp.message_handler(state=Form.nickname)
async def ask_amount(message: types.Message, state: FSMContext):
    await state.update_data(nickname=message.text)
    await Form.next()
    await message.answer("–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ —Å—É–º–º—É –≤ —Ä—É–±–ª—è—Ö, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—á–µ—à—å –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å:")

@dp.message_handler(state=Form.amount)
async def process_order(message: types.Message, state: FSMContext):
    await state.update_data(amount=message.text)
    data = await state.get_data()

    server = data['server']
    nickname = data['nickname']
    amount = data['amount']

    await message.answer(
        f"–û—Ç–ª–∏—á–Ω–æ! –ü–µ—Ä–µ–π–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã: {DONATIONALERTS_LINK}\n"
        f"–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –º—ã –≤—Ä—É—á–Ω—É—é –≤—ã–¥–∞–¥–∏–º –≤–∞–ª—é—Ç—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ '{server}' –¥–ª—è –∏–≥—Ä–æ–∫–∞ '{nickname}'."
    )

    await bot.send_message(
        ADMIN_ID,
        f"üí∞ –ù–æ–≤—ã–π –∑–∞–∫–∞–∑!\n–°–µ—Ä–≤–µ—Ä: {server}\n–ù–∏–∫: {nickname}\n–°—É–º–º–∞: {amount}‚ÇΩ"
    )

    await state.finish()

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
